{"ast":null,"code":"var _jsxFileName = \"D:\\\\2B\\\\cs348\\\\Project\\\\baseball-app\\\\client\\\\src\\\\pages\\\\People.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction People() {\n  _s();\n  const [listOfForms, setListOfForms] = useState([]);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    // fetch always succeeds (besides network error), so need additional error checking\n    fetch(\"http://localhost:3001/people\", {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        console.log(\"FETCH failed\");\n      }\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setListOfForms(data);\n      }\n    }).catch(error => console.log(\"ERROR\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"People\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(People, \"1e/yrVjtXt/d2EBPVajYQRLUvrI=\");\n_c = People;\nexport default People;\nvar _c;\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","People","_s","listOfForms","setListOfForms","name","setName","fetch","headers","accessToken","sessionStorage","getItem","then","res","ok","json","console","log","data","error","catch","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/2B/cs348/Project/baseball-app/client/src/pages/People.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction People() {\r\n    const [listOfForms, setListOfForms] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // fetch always succeeds (besides network error), so need additional error checking\r\n        fetch(\"http://localhost:3001/people\", {\r\n          headers: {\r\n            accessToken: sessionStorage.getItem(\"accessToken\"),\r\n          },\r\n        })\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            } else {\r\n              console.log(\"FETCH failed\");\r\n            }\r\n          })\r\n          .then((data) => {\r\n            if (data.error) {\r\n              console.log(data.error);\r\n            } else {\r\n              setListOfForms(data);\r\n            }\r\n          })\r\n          .catch((error) => console.log(\"ERROR\", error));\r\n      }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"People\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default People;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,8BAA8B,EAAE;MACpCC,OAAO,EAAE;QACPC,WAAW,EAAEC,cAAc,CAACC,OAAO,CAAC,aAAa;MACnD;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLf,cAAc,CAACc,IAAI,CAAC;MACtB;IACF,CAAC,CAAC,CACDE,KAAK,CAAED,KAAK,IAAKH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAGV,oBACEnB,OAAA;IAAKqB,SAAS,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACvB,EAAA,CAjCQD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAmCf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}